{"version":3,"sources":["pages/NotFoundPage/NotFoundPage.tsx","pages/HomePage/HomePage.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["NotFoundPage","className","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","name","sex","to","classNames","Loader","PeopleTable","people","error","isLoading","personSlug","useParams","tableShouldBeShown","length","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","setError","setIsLoading","fetchPeople","peopleResponse","peopleWithParents","find","personMother","personFather","useEffect","Navbar","text","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ef22bd0d.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  people: Person[];\n  error: string | null;\n  isLoading: boolean;\n}\n\nexport const PeopleTable: FC<Props> = ({\n  people,\n  error,\n  isLoading,\n}) => {\n  const { personSlug } = useParams<{ personSlug: string }>();\n  const tableShouldBeShown = !isLoading && !error && people.length > 0;\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && (<Loader />)}\n\n        {error && !isLoading && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {error}\n          </p>\n        )}\n\n        {!people.length && !isLoading && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {tableShouldBeShown && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => {\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.name}\n                    className={classNames({\n                      'has-background-warning': person.slug === personSlug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother && <PersonLink person={person.mother} />}\n                      {person.motherName && !person.mother && (\n                        <p>{person.motherName}</p>\n                      )}\n                      {!person.motherName && '-'}\n                    </td>\n                    <td>\n                      {person.father && <PersonLink person={person.father} />}\n                      {person.fatherName && !person.father && (\n                        <p>{person.fatherName}</p>\n                      )}\n                      {!person.fatherName && '-'}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleResponse: Person[] = await getPeople();\n\n      const peopleWithParents = peopleResponse.map(person => {\n        const mother = peopleResponse\n          .find(personMother => personMother.name === person.motherName);\n        const father = peopleResponse\n          .find(personFather => personFather.name === person.fatherName);\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(peopleWithParents);\n    } catch {\n      setError('Error loading people');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable people={people} error={error} isLoading={isLoading} />\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const Navbar: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App: FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Navbar to=\"/\" text=\"Home\" />\n          <Navbar to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}